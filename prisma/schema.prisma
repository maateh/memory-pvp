generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Profile {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  clerkId  String  @unique
  email    String  @unique
  imageUrl String?

  player Player?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Player {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  tag        String @unique
  color      String
  totalScore Int    @default(0)

  results Result[]

  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId String  @unique @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum GameMode {
  SINGLE
  PVP
}

enum TableSize {
  SMALL
  MEDIUM
  LARGE
}

model GameSession {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  sessionId String @unique

  mode      GameMode
  tableSize TableSize

  results Result[]

  startedAt  DateTime
  finishedAt DateTime @default(now())
}

model Result {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  score Int
  timer Int

  session   GameSession @relation(fields: [sessionId], references: [sessionId], onDelete: Cascade)
  sessionId String

  player   Player @relation(fields: [playerId], references: [id], onDelete: Cascade)
  playerId String @db.ObjectId

  createdAt DateTime @default(now())
}
