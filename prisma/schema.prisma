// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Profile {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  clerkId  String  @unique
  email    String  @unique
  imageUrl String?

  player Player?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Player {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  playerTag String @unique

  sessions GameSession[]
  results  Result[]

  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId String  @unique @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum GameSessionType {
  SINGLE
  PVP
}

model GameSession {
  id        String          @id @default(auto()) @map("_id") @db.ObjectId
  sessionId String          @unique
  type      GameSessionType

  results Result[]

  player   Player @relation(fields: [playerId], references: [id])
  playerId String @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Result {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  player   Player @relation(fields: [playerId], references: [id], onDelete: Cascade)
  playerId String @db.ObjectId

  session   GameSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  sessionId String      @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
